# docker-compose.yml
version: "3.3"
services:
  backend:
    # docker-composeファイルと同階層のDockerfileをビルド
    build: .
    ports:
      # ローカル:Docker
      - 8000:3000
      # DockerとローカルのFSをマウント
    volumes:
      - .:/app
    # dbを先に起動させる
    # ただし、初回起動時はDBの準備に手間取るので、コネクトに失敗する
    # 可能性がある
    depends_on:
      - db
      - redis

  db:
    image: mysql:5.7.22
    # restart: always
    environment:
      MYSQL_DATABASE: ambassador
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: root
    # ローカルに.dbdataを作成し、dbコンテナとFSをマウントする
    volumes:
      - .dbdata:/var/lib/mysql
    ports:
      - 33066:3306

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  smtp:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  admin:
    build:
      context: .
      dockerfile: "./Dockerfile-react-admin"
    volumes:
      - ./react-admin:/react-admin
    command: >
      sh -c "yarn start"
    ports:
      - "3000:3000"

  ambassador:
    build:
      context: .
      dockerfile: "./Dockerfile-react-ambassador"
    volumes:
      - ./react-ambassador:/react-ambassador
    command: >
      sh -c "yarn start"
    ports:
      - "4000:3000"

  checkout:
    build:
      context: .
      dockerfile: "./Dockerfile-nextjs-checkout"
    volumes:
      - ./next-checkout:/next-checkout
    command: >
      sh -c "npm run dev"
    ports:
      - "5000:3000"
